/* @tailwind base;*/

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center
}

@media (hover:hover) {
  .label a:hover {
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity))
  }

  .menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity))
  }
}

.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-color: transparent;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  text-align: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  border-radius: var(--rounded-btn, 0.5rem);
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  min-height: 3rem;
  font-size: 0.875rem;
  line-height: 1em;
  gap: 0.5rem;
  font-weight: 600;
  text-decoration-line: none;
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  text-transform: var(--btn-text-case, uppercase);
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  outline-color: hsl(var(--bc) / 1)
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none
}

.btn-group > input[type="radio"].btn {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none
}

.btn-group > input[type="radio"].btn:before {
  content: attr(data-title)
}

.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content)
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--rounded-box, 1rem)
}

.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.card figure {
  display: flex;
  align-items: center;
  justify-content: center
}

.card.image-full {
  display: grid
}

.card.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  opacity: 0.75;
  border-radius: var(--rounded-box, 1rem)
}

.card.image-full:before,
    .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1
}

.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover
}

.card.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity))
}

.carousel {
  display: inline-flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  -ms-overflow-style: none;
  scrollbar-width: none
}

.carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
  scroll-snap-align: start
}

.carousel-center .carousel-item {
  scroll-snap-align: center
}

.carousel-end .carousel-item {
  scroll-snap-align: end
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  border-radius: var(--rounded-btn, 0.5rem)
}

.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible
}

.collapse {
  position: relative;
  display: grid;
  overflow: hidden;
  grid-template-rows: auto 0fr;
  transition: grid-template-rows 0.2s;
  width: 100%;
  border-radius: var(--rounded-box, 1rem)
}

.collapse-title,
.collapse > input[type="checkbox"],
.collapse > input[type="radio"],
.collapse-content {
  grid-column-start: 1;
  grid-row-start: 1
}

.collapse > input[type="checkbox"],
.collapse > input[type="radio"] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0
}

.collapse-content {
  visibility: hidden;
  grid-column-start: 1;
  grid-row-start: 2;
  min-height: 0px;
  transition: visibility 0.2s;
  transition: padding 0.2s ease-out,
    background-color 0.2s ease-out;
  padding-left: 1rem;
  padding-right: 1rem;
  cursor: unset
}

.collapse[open],
.collapse-open,
.collapse:focus:not(.collapse-close) {
  grid-template-rows: auto 1fr
}

.collapse:not(.collapse-close):has(> input[type="checkbox"]:checked),
.collapse:not(.collapse-close):has(> input[type="radio"]:checked) {
  grid-template-rows: auto 1fr
}

.collapse[open] > .collapse-content,
.collapse-open > .collapse-content,
.collapse:focus:not(.collapse-close) > .collapse-content,
.collapse:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-content,
.collapse:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-content {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content
}

.dropdown {
  position: relative;
  display: inline-block
}

.dropdown > *:focus {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.dropdown .dropdown-content {
  position: absolute
}

.dropdown:is(:not(details)) .dropdown-content {
  visibility: hidden;
  opacity: 0;
  transform-origin: top;
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms
}

.dropdown-end .dropdown-content {
  right: 0px
}

.dropdown-left .dropdown-content {
  top: 0px;
  right: 100%;
  bottom: auto;
  transform-origin: right
}

.dropdown-right .dropdown-content {
  left: 100%;
  top: 0px;
  bottom: auto;
  transform-origin: left
}

.dropdown-bottom .dropdown-content {
  bottom: auto;
  top: 100%;
  transform-origin: top
}

.dropdown-top .dropdown-content {
  bottom: 100%;
  top: auto;
  transform-origin: bottom
}

.dropdown-end.dropdown-right .dropdown-content {
  bottom: 0px;
  top: auto
}

.dropdown-end.dropdown-left .dropdown-content {
  bottom: 0px;
  top: auto
}

.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
  visibility: visible;
  opacity: 1
}

@media (hover: hover) {
  .dropdown.dropdown-hover:hover .dropdown-content {
    visibility: visible;
    opacity: 1
  }

  .btn:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--b3) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity))
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
  }

  .btn-ghost:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2
  }

  .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--pf) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--pf) / var(--tw-bg-opacity))
  }

  .dropdown.dropdown-hover:hover .dropdown-content {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
  }

  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover, :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
    cursor: pointer;
    background-color: hsl(var(--bc) / 0.1);
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline: 2px solid transparent;
    outline-offset: 2px
  }
}

.dropdown:is(details) summary::-webkit-details-marker {
  display: none
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  row-gap: 2.5rem;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.5rem
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column
  }

  .footer-center {
    grid-auto-flow: row dense
  }
}

.label {
  display: flex;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: space-between;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem
}

.input {
  flex-shrink: 1;
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.5rem;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-radius: var(--rounded-btn, 0.5rem)
}

.input-group > .input {
  isolation: isolate
}

.input-group > *,
  .input-group > .input,
  .input-group > .textarea,
  .input-group > .select {
  border-radius: 0px
}

.join .dropdown .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .dropdown .join-item {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit
}

.link {
  cursor: pointer;
  text-decoration-line: underline
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.5rem
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
  margin-left: 1rem;
  padding-left: 0.5rem
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none
}

.menu li.disabled {
  cursor: not-allowed;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  color: hsl(var(--bc) / 0.3)
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch
}

:where(.menu li) .badge {
  justify-self: end
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.5rem);
  min-height: 4rem;
  width: 100%
}

:where(.navbar > *) {
  display: inline-flex;
  align-items: center
}

.navbar-start {
  width: 50%;
  justify-content: flex-start
}

.navbar-center {
  flex-shrink: 0
}

.navbar-end {
  width: 50%;
  justify-content: flex-end
}

.swap {
  position: relative;
  display: inline-grid;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  place-content: center;
  cursor: pointer
}

.swap > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity
}

.swap input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none
}

.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
  opacity: 0
}

.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
  opacity: 0
}

.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
  opacity: 1
}

.btm-nav > * .label {
  font-size: 1rem;
  line-height: 1.5rem
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97))
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%
}

.btn-ghost {
  border-width: 1px;
  border-color: transparent;
  background-color: transparent;
  color: currentColor;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor
}

.btn-ghost.btn-active {
  --tw-border-opacity: 0;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2
}

.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  --tw-border-opacity: 0;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2
}

.btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity))
}

.btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-color: hsl(var(--p) / 1)
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity))
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: hsl(var(--p) / 1)
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98))
  }

  40% {
    transform: scale(1.02)
  }

  100% {
    transform: scale(1)
  }
}

.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset
}

.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit
}

.card:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px
}

.card.bordered {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity))
}

.card.compact .card-body {
  padding: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem
}

.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit
}

.carousel::-webkit-scrollbar {
  display: none
}

.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1)
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
      linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
      linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
      linear-gradient(
        45deg,
        hsl(var(--chkbg)) 30%,
        hsl(var(--chkfg)) 30.99%,
        hsl(var(--chkfg)) 40%,
        transparent 40.99%
      ),
      linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%)
}

.checkbox:indeterminate {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
      linear-gradient(
        0deg,
        hsl(var(--chkbg)) 43%,
        hsl(var(--chkfg)) 43%,
        hsl(var(--chkfg)) 57%,
        hsl(var(--chkbg)) 57%
      )
}

.checkbox:disabled {
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  opacity: 0.2
}

@keyframes checkmark {
  0% {
    background-position-y: 5px
  }

  50% {
    background-position-y: -2px
  }

  100% {
    background-position-y: 0
  }
}

[dir="rtl"] .checkbox:checked,
    [dir="rtl"] .checkbox[checked="true"],
    [dir="rtl"] .checkbox[aria-checked="true"] {
  background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
        linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
        linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
        linear-gradient(
          -45deg,
          hsl(var(--chkbg)) 30%,
          hsl(var(--chkfg)) 30.99%,
          hsl(var(--chkfg)) 40%,
          transparent 40.99%
        ),
        linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%)
}

details.collapse {
  width: 100%
}

details.collapse summary {
  position: relative;
  display: block;
  outline: 2px solid transparent;
  outline-offset: 2px
}

details.collapse summary::-webkit-details-marker {
  display: none
}

.collapse:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1)
}

.collapse:has(.collapse-title:focus-visible),
.collapse:has(> input[type="checkbox"]:focus-visible),
.collapse:has(> input[type="radio"]:focus-visible) {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 1)
}

.collapse-arrow > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  --tw-translate-y: -100%;
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-duration: 0.2s;
  top: 50%;
  right: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none
}

[dir="rtl"] .collapse-arrow > .collapse-title:after {
  --tw-rotate: -45deg
}

.collapse-plus > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  top: 0.9rem;
  right: 1.4rem;
  content: "+";
  pointer-events: none
}

.collapse:not(.collapse-open):not(.collapse-close) > input[type="checkbox"],
.collapse:not(.collapse-open):not(.collapse-close) > input[type="radio"]:not(:checked),
.collapse:not(.collapse-open):not(.collapse-close) > .collapse-title {
  cursor: pointer
}

.collapse:focus:not(.collapse-open):not(.collapse-close):not(.collapse[open]) > .collapse-title {
  cursor: unset
}

.collapse-title {
  position: relative
}

:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
  z-index: 1
}

.collapse-title,
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
  width: 100%;
  padding: 1rem;
  padding-right: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out
}

.collapse[open] > :where(.collapse-content),
.collapse-open > :where(.collapse-content),
.collapse:focus:not(.collapse-close) > :where(.collapse-content),
.collapse:not(.collapse-close) > :where(input[type="checkbox"]:checked ~ .collapse-content),
.collapse:not(.collapse-close) > :where(input[type="radio"]:checked ~ .collapse-content) {
  padding-bottom: 1rem;
  transition: padding 0.2s ease-out,
    background-color 0.2s ease-out
}

.collapse[open].collapse-arrow > .collapse-title:after,
.collapse-open.collapse-arrow > .collapse-title:after,
.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
  --tw-translate-y: -50%;
  --tw-rotate: 225deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

[dir="rtl"] .collapse[open].collapse-arrow > .collapse-title:after,
[dir="rtl"] .collapse-open.collapse-arrow > .collapse-title:after,
[dir="rtl"] .collapse-arrow:focus:not(.collapse-close) .collapse-title:after,
[dir="rtl"]
  .collapse-arrow:not(.collapse-close)
  input[type="checkbox"]:checked
  ~ .collapse-title:after {
  --tw-rotate: 135deg
}

.collapse[open].collapse-plus > .collapse-title:after,
.collapse-open.collapse-plus > .collapse-title:after,
.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
  content: "−"
}

.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em
}

.input:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(var(--bc) / 0.2)
}

.input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2
}

.input-disabled::-moz-placeholder, .input:disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2
}

.input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px
}

:where(.menu li:empty) {
  background-color: hsl(var(--bc) / 0.1);
  margin: 0.5rem 1rem;
  height: 1px
}

.menu :where(li ul):before {
  position: absolute;
  left: 0px;
  top: 0.75rem;
  bottom: 0.75rem;
  width: 1px;
  background-color: hsl(var(--bc) / 0.1);
  content: ""
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: left;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  border-radius: var(--rounded-btn, 0.5rem);
  text-wrap: balance
}

:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):is(summary):not(.active):focus-visible,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(summary):not(.active):focus-visible {
  cursor: pointer;
  background-color: hsl(var(--bc) / 0.1);
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  outline: 2px solid transparent;
  outline-offset: 2px
}

.menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity))
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none
}

.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
  justify-self: end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none
}

.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity));
  padding-left: 2rem
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0.5rem;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 1.25rem;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6
}

@keyframes modal-pop {
  0% {
    opacity: 0
  }
}

@keyframes progress-loading {
  50% {
    background-position-x: -115%
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset,
      0 0 0 12px hsl(var(--b1)) inset
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset,
      0 0 0 3px hsl(var(--b1)) inset
  }

  100% {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset,
      0 0 0 4px hsl(var(--b1)) inset
  }
}

@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em)
  }

  40% {
    transform: translateY(-0.125em)
  }

  100% {
    transform: translateY(0)
  }
}

.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate ~ .swap-on {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-rotate input:checked ~ .swap-off,
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-rotate input:checked ~ .swap-on,
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-flip {
  transform-style: preserve-3d;
  perspective: 16em
}

.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 1
}

.swap-flip input:checked ~ .swap-off,
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 1
}

.swap-flip input:checked ~ .swap-on,
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
  transform: rotateY(0deg)
}

@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0
  }

  100% {
    transform: scale(1);
    opacity: 1
  }
}

.btn-xs {
  height: 1.5rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  min-height: 1.5rem;
  font-size: 0.75rem
}

.btn-square:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  padding: 0px
}

.btn-circle:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px
}

.menu-horizontal {
  display: inline-flex;
  flex-direction: row
}

.menu-horizontal > li:not(.menu-title) > details > ul {
  position: absolute
}

.avatar.online:before {
  content: "";
  position: absolute;
  z-index: 10;
  display: block;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  outline-style: solid;
  outline-width: 2px;
  outline-color: hsl(var(--b1) / 1);
  width: 15%;
  height: 15%;
  top: 7%;
  right: 7%
}

.btn-group .btn:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0
}

.btn-group .btn:first-child:not(:last-child) {
  margin-top: -0px;
  margin-left: -1px;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0
}

.btn-group .btn:last-child:not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}

.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0
}

.btn-group-horizontal .btn:first-child:not(:last-child) {
  margin-top: -0px;
  margin-left: -1px;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0
}

.btn-group-horizontal .btn:last-child:not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}

.btn-group-vertical .btn:first-child:not(:last-child) {
  margin-top: -1px;
  margin-left: -0px;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0
}

.btn-group-vertical .btn:last-child:not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: var(--rounded-btn, 0.5rem)
}

.menu-horizontal > li:not(.menu-title) > details > ul {
  margin-top: 1rem;
  margin-left: 0px;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-right: 0.5rem
}

.menu-horizontal > li > details > ul:before {
  content: none
}

:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  border-radius: var(--rounded-box, 1rem)
}

.collapse {
  visibility: collapse
}

.static {
  position: static
}

.absolute {
  position: absolute
}

.relative {
  position: relative
}

.sticky {
  position: sticky
}

.inset-y-0 {
  top: 0px;
  bottom: 0px
}

.bottom-0 {
  bottom: 0px
}

.left-0 {
  left: 0px
}

.left-\[0\.8\%\] {
  left: 0.8%
}

.right-0 {
  right: 0px
}

.right-\[1\%\] {
  right: 1%
}

.top-0 {
  top: 0px
}

.top-\[50px\] {
  top: 50px
}

.top-\[90px\] {
  top: 90px
}

.z-10 {
  z-index: 10
}

.z-\[1\] {
  z-index: 1
}

.z-\[3\] {
  z-index: 3
}

.z-\[55\] {
  z-index: 55
}

.z-\[99\] {
  z-index: 99
}

.\!m-0 {
  margin: 0px !important
}

.m-0 {
  margin: 0px
}

.mx-\[24px\] {
  margin-left: 24px;
  margin-right: 24px
}

.mx-auto {
  margin-left: auto;
  margin-right: auto
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem
}

.my-\[16px\] {
  margin-top: 16px;
  margin-bottom: 16px
}

.my-\[48px\] {
  margin-top: 48px;
  margin-bottom: 48px
}

.\!ml-\[-10px\] {
  margin-left: -10px !important
}

.\!mr-0 {
  margin-right: 0px !important
}

.\!mt-\[11px\] {
  margin-top: 11px !important
}

.\!mt-\[9px\] {
  margin-top: 9px !important
}

.mb-0 {
  margin-bottom: 0px
}

.mb-5 {
  margin-bottom: 1.25rem
}

.mb-\[8px\] {
  margin-bottom: 8px
}

.ml-auto {
  margin-left: auto
}

.mr-1 {
  margin-right: 0.25rem
}

.mt-0 {
  margin-top: 0px
}

.mt-6 {
  margin-top: 1.5rem
}

.box-border {
  box-sizing: border-box
}

.block {
  display: block
}

.inline-block {
  display: inline-block
}

.flex {
  display: flex
}

.hidden {
  display: none
}

.\!h-fit {
  height: -moz-fit-content !important;
  height: fit-content !important
}

.h-\[20px\] {
  height: 20px
}

.h-\[36px\] {
  height: 36px
}

.h-\[40px\] {
  height: 40px
}

.h-\[48px\] {
  height: 48px
}

.h-\[49px\] {
  height: 49px
}

.h-\[54px\] {
  height: 54px
}

.h-\[600px\] {
  height: 600px
}

.h-\[72px\] {
  height: 72px
}

.h-auto {
  height: auto
}

.h-fit {
  height: -moz-fit-content;
  height: fit-content
}

.h-full {
  height: 100%
}

.\!min-h-\[48px\] {
  min-height: 48px !important
}

.min-h-\[54px\] {
  min-height: 54px
}

.w-0 {
  width: 0px
}

.w-1\/6 {
  width: 16.666667%
}

.w-5\/12 {
  width: 41.666667%
}

.w-\[100px\] {
  width: 100px
}

.w-\[108px\] {
  width: 108px
}

.w-\[133px\] {
  width: 133px
}

.w-\[153\.23px\] {
  width: 153.23px
}

.w-\[170px\] {
  width: 170px
}

.w-\[22px\] {
  width: 22px
}

.w-\[32px\] {
  width: 32px
}

.w-\[98\%\] {
  width: 98%
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content
}

.w-full {
  width: 100%
}

.w-screen {
  width: 100vw
}

.max-w-\[1287px\] {
  max-width: 1287px
}

.max-w-\[1600px\] {
  max-width: 1600px
}

.max-w-\[1920px\] {
  max-width: 1920px
}

.basis-full {
  flex-basis: 100%
}

.origin-center {
  transform-origin: center
}

.scale-\[-1\] {
  --tw-scale-x: -1;
  --tw-scale-y: -1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.list-none {
  list-style-type: none
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr))
}

.flex-wrap {
  flex-wrap: wrap
}

.items-center {
  align-items: center
}

.justify-center {
  justify-content: center
}

.justify-between {
  justify-content: space-between
}

.justify-evenly {
  justify-content: space-evenly
}

.gap-0 {
  gap: 0px
}

.gap-2 {
  gap: 0.5rem
}

.rounded-\[10px\] {
  border-radius: 10px
}

.rounded-\[50\%\] {
  border-radius: 50%
}

.rounded-none {
  border-radius: 0px
}

.border-0 {
  border-width: 0px
}

.border-\[1px\] {
  border-width: 1px
}

.border-\[2px\] {
  border-width: 2px
}

.border-x-0 {
  border-left-width: 0px;
  border-right-width: 0px
}

.border-y-0 {
  border-top-width: 0px;
  border-bottom-width: 0px
}

.border-b-0 {
  border-bottom-width: 0px
}

.border-b-2 {
  border-bottom-width: 2px
}

.border-t-0 {
  border-top-width: 0px
}

.border-solid {
  border-style: solid
}

.border-\[\#262626\] {
  --tw-border-opacity: 1;
  border-color: rgb(38 38 38 / var(--tw-border-opacity))
}

.border-\[\#7d7c7c\] {
  --tw-border-opacity: 1;
  border-color: rgb(125 124 124 / var(--tw-border-opacity))
}

.border-\[\#afaeae\] {
  --tw-border-opacity: 1;
  border-color: rgb(175 174 174 / var(--tw-border-opacity))
}

.border-\[\#cac9c9\] {
  --tw-border-opacity: 1;
  border-color: rgb(202 201 201 / var(--tw-border-opacity))
}

.bg-\[\#0067b8\] {
  --tw-bg-opacity: 1;
  background-color: rgb(0 103 184 / var(--tw-bg-opacity))
}

.bg-\[\#e6e6e6\] {
  --tw-bg-opacity: 1;
  background-color: rgb(230 230 230 / var(--tw-bg-opacity))
}

.bg-\[\#f2f2f2\] {
  --tw-bg-opacity: 1;
  background-color: rgb(242 242 242 / var(--tw-bg-opacity))
}

.bg-\[\#ffb900\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 185 0 / var(--tw-bg-opacity))
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity))
}

.bg-base-200 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2) / var(--tw-bg-opacity))
}

.bg-slate-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(203 213 225 / var(--tw-bg-opacity))
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}

.fill-current {
  fill: currentColor
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover
}

.\!p-0 {
  padding: 0px !important
}

.p-0 {
  padding: 0px
}

.p-1 {
  padding: 0.25rem
}

.p-2 {
  padding: 0.5rem
}

.p-3 {
  padding: 0.75rem
}

.p-\[10px\] {
  padding: 10px
}

.p-\[48px\] {
  padding: 48px
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem
}

.px-20 {
  padding-left: 5rem;
  padding-right: 5rem
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem
}

.px-\[10px\] {
  padding-left: 10px;
  padding-right: 10px
}

.px-\[12px\] {
  padding-left: 12px;
  padding-right: 12px
}

.px-\[16px\] {
  padding-left: 16px;
  padding-right: 16px
}

.px-\[24px\] {
  padding-left: 24px;
  padding-right: 24px
}

.px-\[5\%\] {
  padding-left: 5%;
  padding-right: 5%
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px
}

.py-\[12px\] {
  padding-top: 12px;
  padding-bottom: 12px
}

.py-\[14px\] {
  padding-top: 14px;
  padding-bottom: 14px
}

.py-\[18px\] {
  padding-top: 18px;
  padding-bottom: 18px
}

.py-\[6px\] {
  padding-top: 6px;
  padding-bottom: 6px
}

.py-\[8px\] {
  padding-top: 8px;
  padding-bottom: 8px
}

.pb-\[8px\] {
  padding-bottom: 8px
}

.pl-0 {
  padding-left: 0px
}

.pl-\[24px\] {
  padding-left: 24px
}

.pl-\[30px\] {
  padding-left: 30px
}

.pr-0 {
  padding-right: 0px
}

.pt-\[16px\] {
  padding-top: 16px
}

.text-center {
  text-align: center
}

.font-sans {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"
}

.font-serif {
  font-family: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif
}

.text-\[11px\] {
  font-size: 11px
}

.text-\[12px\] {
  font-size: 12px
}

.text-\[13px\] {
  font-size: 13px
}

.text-\[14px\] {
  font-size: 14px
}

.text-\[15px\] {
  font-size: 15px
}

.text-\[16px\] {
  font-size: 16px
}

.text-\[29px\] {
  font-size: 29px
}

.text-\[37px\] {
  font-size: 37px
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem
}

.font-bold {
  font-weight: 700
}

.font-medium {
  font-weight: 500
}

.font-semibold {
  font-weight: 600
}

.normal-case {
  text-transform: none
}

.leading-\[15px\] {
  line-height: 15px
}

.leading-\[16px\] {
  line-height: 16px
}

.leading-\[20px\] {
  line-height: 20px
}

.leading-\[23px\] {
  line-height: 23px
}

.leading-\[24px\] {
  line-height: 24px
}

.tracking-tight {
  letter-spacing: -0.025em
}

.text-\[\#0067b8\] {
  --tw-text-opacity: 1;
  color: rgb(0 103 184 / var(--tw-text-opacity))
}

.text-\[\#262626\] {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity))
}

.text-\[\#616161\] {
  --tw-text-opacity: 1;
  color: rgb(97 97 97 / var(--tw-text-opacity))
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity))
}

.no-underline {
  text-decoration-line: none
}

.\!shadow-none {
  --tw-shadow: 0 0 #0000 !important;
  --tw-shadow-colored: 0 0 #0000 !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.duration-500 {
  transition-duration: 500ms
}

.duration-\[500\] {
  transition-duration: 500
}

.ease-linear {
  transition-timing-function: linear
}

.focus-within\:absolute:focus-within {
  position: absolute
}

.focus-within\:w-\[96\%\]:focus-within {
  width: 96%
}

.focus-within\:border-\[2px\]:focus-within {
  border-width: 2px
}

.focus-within\:border-solid:focus-within {
  border-style: solid
}

.focus-within\:border-\[\#ccc\]:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(204 204 204 / var(--tw-border-opacity))
}

.focus-within\:transition-all:focus-within {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.focus-within\:duration-500:focus-within {
  transition-duration: 500ms
}

.focus-within\:ease-linear:focus-within {
  transition-timing-function: linear
}

.hover\:border-b-2:hover {
  border-bottom-width: 2px
}

.hover\:bg-\[\#dcdcdc\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(220 220 220 / var(--tw-bg-opacity))
}

.hover\:underline:hover {
  text-decoration-line: underline
}

.focus\:w-full:focus {
  width: 100%
}

.focus\:rounded-\[50\%\]:focus {
  border-radius: 50%
}

.focus\:border-none:focus {
  border-style: none
}

.focus\:bg-\[\#f2f2f2\]:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(242 242 242 / var(--tw-bg-opacity))
}

.focus\:bg-slate-800:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(30 41 59 / var(--tw-bg-opacity))
}

.focus\:pl-\[50px\]:focus {
  padding-left: 50px
}

.focus\:text-white:focus {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity))
}

.active\:bg-\[\#f2f2f2\]:active {
  --tw-bg-opacity: 1;
  background-color: rgb(242 242 242 / var(--tw-bg-opacity))
}

.active\:bg-black:active {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity))
}

.active\:text-white:active {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity))
}

.peer:checked ~ .peer-checked\:flex {
  display: flex
}

.peer:checked ~ .peer-checked\:hidden {
  display: none
}

.peer:checked ~ .peer-checked\:border-dashed {
  border-style: dashed
}

@media (max-width: 1287px) {
  .max-\[1287px\]\:right-\[0\.8\%\] {
    right: 0.8%
  }
}

@media (max-width: 860px) {
  .max-\[860px\]\:hidden {
    display: none
  }
}

@media (min-width: 540px) {
  .\32xs\:w-\[50\%\] {
    width: 50%
  }

  .\32xs\:basis-1\/2 {
    flex-basis: 50%
  }

  .\32xs\:basis-1\/3 {
    flex-basis: 33.333333%
  }
}

@media (min-width: 860px) {
  .xs\:inline {
    display: inline
  }

  .xs\:flex {
    display: flex
  }

  .xs\:hidden {
    display: none
  }

  .min-\[860px\]\:hidden {
    display: none
  }

  .min-\[860px\]\:focus-within\:w-\[83\%\]:focus-within {
    width: 83%
  }
}

@media (min-width: 880px) {
  .sm\:block {
    display: block
  }

  .sm\:inline {
    display: inline
  }

  .sm\:flex {
    display: flex
  }

  .sm\:hidden {
    display: none
  }
}

@media (min-width: 930px) {
  .md\:inline {
    display: inline
  }

  .md\:flex {
    display: flex
  }

  .md\:hidden {
    display: none
  }

  .min-\[930px\]\:focus-within\:w-\[84\%\]:focus-within {
    width: 84%
  }
}

@media (min-width: 1000px) {
  .min-\[1000px\]\:focus-within\:w-\[85\.5\%\]:focus-within {
    width: 85.5%
  }
}

@media (min-width: 1015px) {
  .lg\:inline {
    display: inline
  }

  .lg\:flex {
    display: flex
  }

  .lg\:hidden {
    display: none
  }
}

@media (min-width: 1050px) {
  .xl\:absolute {
    position: absolute
  }

  .xl\:mb-0 {
    margin-bottom: 0px
  }

  .xl\:block {
    display: block
  }

  .xl\:inline-block {
    display: inline-block
  }

  .xl\:inline {
    display: inline
  }

  .xl\:hidden {
    display: none
  }

  .xl\:w-\[25\%\] {
    width: 25%
  }

  .xl\:basis-1\/4 {
    flex-basis: 25%
  }

  .xl\:basis-1\/6 {
    flex-basis: 16.666667%
  }
}

@media (min-width: 1100px) {
  .min-\[1100px\]\:focus-within\:w-\[86\.5\%\]:focus-within {
    width: 86.5%
  }
}

@media (min-width: 1200px) {
  .min-\[1200px\]\:focus-within\:w-\[87\%\]:focus-within {
    width: 87%
  }
}

@media (min-width: 1250px) {
  .min-\[1250px\]\:focus-within\:w-\[88\%\]:focus-within {
    width: 88%
  }
}

@media (min-width: 1287px) {
  .min-\[1287px\]\:right-0 {
    right: 0px
  }
}

@media (min-width: 1400px) {
  .\32xl\:block {
    display: block
  }

  .\32xl\:inline {
    display: inline
  }

  .\32xl\:hidden {
    display: none
  }

  .\32xl\:focus-within\:w-\[88\%\]:focus-within {
    width: 88%
  }
}